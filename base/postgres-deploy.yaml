apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: postgres-user
              name: che
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: postgres-password
              name: che
        - name: POSTGRESQL_DATABASE
          value: keycloak
        - name: CHE_POSTGRES_USERNAME
          valueFrom:
            secretKeyRef:
              key: che-postgres-user
              name: che
        - name: CHE_POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: che-postgres-password
              name: che
        - name: CHE_POSTGRES_DATABASE
          value: dbche
        image: eclipse/che-postgres:nightly
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5432
          timeoutSeconds: 1
        name: postgres
        ports:
        - containerPort: 5432
        readinessProbe:
          exec:
            command:
            - bash
            - -c
            - psql -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d $POSTGRESQL_DATABASE -c
              "SELECT 1"
          failureThreshold: 10
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          runAsUser: 26
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgres-data
      restartPolicy: Always
      securityContext:
        fsGroup: 26
        runAsUser: 26
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-data
